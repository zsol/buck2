"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6392],{28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>l});var i=s(96540);const r={},n=i.createContext(r);function a(e){const t=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(n.Provider,{value:t},e.children)}},78694:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"prelude/rules/java/gwt_binary","title":"gwt_binary","description":"gwt\\\\_binary","source":"@site/../docs/prelude/rules/java/gwt_binary.md","sourceDirName":"prelude/rules/java","slug":"/prelude/rules/java/gwt_binary","permalink":"/docs/prelude/rules/java/gwt_binary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"java","permalink":"/docs/prelude/rules/java/"},"next":{"title":"jar_genrule","permalink":"/docs/prelude/rules/java/jar_genrule"}}');var r=s(74848),n=s(28453);s(56289);const a={},l="gwt_binary",o={},c=[{value:"gwt_binary",id:"gwt_binary-1",level:2},{value:"Parameters",id:"parameters",level:4}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"gwt_binary",children:"gwt_binary"})}),"\n",(0,r.jsx)(t.h2,{id:"gwt_binary-1",children:"gwt_binary"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'def gwt_binary(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _exec_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    _java_toolchain: str = "gh_facebook_buck2_shims_meta//:java",\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    draft_compile: bool = False,\n    experimental_args: list[str] = [],\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    local_workers: int = 2,\n    module_deps: list[str] = [],\n    modules: list[str] = [],\n    optimize: int = 9,\n    strict: bool = False,\n    style: str = "obf",\n    vm_args: list[str] = [],\n) -> None\n'})}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);