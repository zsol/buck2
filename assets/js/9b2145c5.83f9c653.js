"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8172],{28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var i=n(96540);const r={},t=i.createContext(r);function l(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:s},e.children)}},89262:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"prelude/rules/apple/apple_resource","title":"apple_resource","description":"apple\\\\_resource","source":"@site/../docs/prelude/rules/apple/apple_resource.md","sourceDirName":"prelude/rules/apple","slug":"/prelude/rules/apple/apple_resource","permalink":"/docs/prelude/rules/apple/apple_resource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"apple_package","permalink":"/docs/prelude/rules/apple/apple_package"},"next":{"title":"apple_resource_bundle","permalink":"/docs/prelude/rules/apple/apple_resource_bundle"}}');var r=n(74848),t=n(28453);n(56289);const l={},a="apple_resource",o={},c=[{value:"apple_resource",id:"apple_resource-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"apple_resource",children:"apple_resource"})}),"\n",(0,r.jsx)(s.h2,{id:"apple_resource-1",children:"apple_resource"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'def apple_resource(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    codesign_entitlements: None | str = None,\n    codesign_flags_override: None | list[str] = None,\n    codesign_on_copy: bool = False,\n    contacts: list[str] = [],\n    content_dirs: list[str] = [],\n    default_host_platform: None | str = None,\n    destination: None | str = None,\n    dirs: list[str] = [],\n    files: list[str] = [],\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    named_variants: dict[str, list[str]] = {},\n    resources_from_deps: list[str] = [],\n    skip_universal_resource_dedupe: bool = False,\n    variants: list[str] = [],\n) -> None\n'})}),"\n",(0,r.jsxs)(s.p,{children:["An ",(0,r.jsx)(s.code,{children:"apple_resource()"})," rule contains sets of resource directories, files and file variants that can be bundled in an application bundle. This rule does not have any output on its own and can be built only as a dependency (either direct or transitive) of an ",(0,r.jsx)(s.code,{children:"apple_bundle()"})," rule."]}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"name"}),": name of the target"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"codesign_on_copy"}),": Indicates whether the files specified in the files arg in this resource should be code signed with the identity used to sign the overall bundle. This is useful for e.g. dylibs or other additional binaries copied into the bundle. The caller is responsible to ensure that the file format is valid for codesigning."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"content_dirs"}),": Set of paths of directories containing resource files that should be placed in an application bundle. Unlike ",(0,r.jsx)(s.code,{children:"dirs"}),", the directories themselves are not placed in the bundle."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"destination"}),': Specifies the destination in the final application bundle where resource will be copied. Possible values: "resources", "frameworks", "executables", "plugins", "xpcservices".']}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"dirs"}),": Set of paths of resource directories that should be placed in an application bundle."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"files"}),": Set of paths of resource files that should be placed in an application bundle."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"named_variants"}),": Mapping from a variant name to the list of resource file paths which should be placed in an application bundle. Those files will be placed in a directory with name equal to the corresponding key in this mapping. Keys should end with ",(0,r.jsx)(s.code,{children:".lproj"})," suffix. (e.g. ",(0,r.jsx)(s.code,{children:"Base.lproj"}),", ",(0,r.jsx)(s.code,{children:"en.lproj"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"resources_from_deps"}),": Set of build targets whose transitive ",(0,r.jsx)(s.code,{children:"apple_resource"}),"s should be considered as part of the current resource when collecting resources for bundles."]}),"\n",(0,r.jsxs)(s.p,{children:["Usually, an ",(0,r.jsx)(s.code,{children:"apple_bundle"})," collects all ",(0,r.jsx)(s.code,{children:"apple_resource"})," rules transitively\nreachable through apple_library rules. This field allows for resources which are not reachable\nusing the above traversal strategy to be considered for inclusion in the bundle."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"variants"}),": Set of paths of resource file variants that should be placed in an application bundle. The files mentioned here should be placed in a directory named ",(0,r.jsx)(s.code,{children:"$VARIANT_NAME.lproj"}),", where ",(0,r.jsx)(s.code,{children:"$VARIANT_NAME"})," is the name of the variant (e.g. ",(0,r.jsx)(s.code,{children:"Base"}),", ",(0,r.jsx)(s.code,{children:"en"}),"). This argument makes it possible to use different resource files based on the active locale."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"details",children:"Details"}),"\n",(0,r.jsx)(s.p,{children:"Examples:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"\napple_resource(\n  name = 'Images',\n  files = glob([\n    '*.png',\n  ]),\n  dirs = [\n    'PrettyImages',\n  ],\n)\n\n"})})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);