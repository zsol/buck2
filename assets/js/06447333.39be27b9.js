"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8345],{28453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>a});var i=r(96540);const s={},n=i.createContext(s);function l(e){const t=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(n.Provider,{value:t},e.children)}},83385:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"prelude/rules/cxx/prebuilt_cxx_library","title":"prebuilt_cxx_library","description":"prebuilt\\\\cxx\\\\library","source":"@site/../docs/prelude/rules/cxx/prebuilt_cxx_library.md","sourceDirName":"prelude/rules/cxx","slug":"/prelude/rules/cxx/prebuilt_cxx_library","permalink":"/docs/prelude/rules/cxx/prebuilt_cxx_library","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"llvm_link_bitcode","permalink":"/docs/prelude/rules/cxx/llvm_link_bitcode"},"next":{"title":"prebuilt_cxx_library_group","permalink":"/docs/prelude/rules/cxx/prebuilt_cxx_library_group"}}');var s=r(74848),n=r(28453);r(56289);const l={},a="prebuilt_cxx_library",o={},d=[{value:"prebuilt_cxx_library",id:"prebuilt_cxx_library-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"prebuilt_cxx_library",children:"prebuilt_cxx_library"})}),"\n",(0,s.jsx)(t.h2,{id:"prebuilt_cxx_library-1",children:"prebuilt_cxx_library"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'def prebuilt_cxx_library(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _create_third_party_build_root: str = "prelude//third-party/tools:create_build",\n    _cxx_toolchain: str = "gh_facebook_buck2_shims_meta//:cxx",\n    _target_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    allow_cache_upload: None | bool = None,\n    can_be_asset: bool = False,\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deffile: None | str = None,\n    deps: list[str] = [],\n    exported_deps: list[str] = [],\n    exported_header_style: str = "system",\n    exported_headers: list[str] | dict[str, str] = [],\n    exported_lang_platform_preprocessor_flags: dict[str, list[(str, list[str])]] = {},\n    exported_lang_preprocessor_flags: dict[str, list[str]] = {},\n    exported_linker_flags: list[str] = [],\n    exported_platform_deps: list[(str, list[str])] = [],\n    exported_platform_headers: list[(str, list[str] | dict[str, str])] = [],\n    exported_platform_linker_flags: list[(str, list[str])] = [],\n    exported_platform_preprocessor_flags: list[(str, list[str])] = [],\n    exported_post_linker_flags: list[str] = [],\n    exported_post_platform_linker_flags: list[(str, list[str])] = [],\n    exported_preprocessor_flags: list[str] = [],\n    extract_soname: bool = False,\n    force_static: bool = False,\n    frameworks: list[str] = [],\n    header_dirs: None | list[str] = None,\n    header_namespace: None | str = None,\n    header_only: bool = False,\n    import_lib: None | str = None,\n    include_in_android_merge_map_output: bool = True,\n    labels: list[str] = [],\n    libraries: list[str] = [],\n    licenses: list[str] = [],\n    link_whole: bool = False,\n    link_without_soname: bool = False,\n    linker_flags: list[str] = [],\n    local_linker_flags: list[str] = [],\n    local_linker_script_flags: list[str] = [],\n    platform_header_dirs: None | list[(str, list[str])] = None,\n    platform_import_lib: None | list[(str, str)] = None,\n    platform_shared_lib: None | list[(str, str)] = None,\n    platform_static_lib: None | list[(str, str)] = None,\n    platform_static_pic_lib: None | list[(str, str)] = None,\n    post_linker_flags: list[str] = [],\n    preferred_linkage: str = "any",\n    prestripped: bool = False,\n    provided: bool = False,\n    public_include_directories: list[str] = [],\n    public_system_include_directories: list[str] = [],\n    raw_headers: list[str] = [],\n    shared_lib: None | str = None,\n    soname: None | str = None,\n    static_lib: None | str = None,\n    static_pic_lib: None | str = None,\n    stub: bool = False,\n    supported_platforms_regex: None | str = None,\n    supports_lto: bool = False,\n    supports_merged_linking: None | bool = None,\n    supports_python_dlopen: bool = True,\n    supports_shared_library_interface: bool = True,\n    version: None | str = None,\n    versioned_exported_lang_platform_preprocessor_flags: list[(dict[str, str], dict[str, list[(str, list[str])]])] = [],\n    versioned_exported_lang_preprocessor_flags: list[(dict[str, str], dict[str, list[str]])] = [],\n    versioned_exported_platform_preprocessor_flags: list[(dict[str, str], list[(str, list[str])])] = [],\n    versioned_exported_preprocessor_flags: list[(dict[str, str], list[str])] = [],\n    versioned_header_dirs: None | list[(dict[str, str], list[str])] = None,\n    versioned_import_lib: None | list[(dict[str, str], str)] = None,\n    versioned_shared_lib: None | list[(dict[str, str], str)] = None,\n    versioned_soname: None | list[(dict[str, str], str)] = None,\n    versioned_static_lib: None | list[(dict[str, str], str)] = None,\n    versioned_static_pic_lib: None | list[(dict[str, str], str)] = None,\n) -> None\n'})}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.code,{children:"prebuilt_cxx_library()"})," rule represents a set of native libraries and C/C++ header files and provides various flags to control how they are linked and exported."]}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"allow_cache_upload"}),": Whether to allow uploading the output of this rule to be uploaded to cache when the action is executed locally if the configuration allows (i.e. there is a cache configured and the client has permission to write to it)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"deffile"}),": Specifies the *.def file used on windows to modify a dll's exports in place of explicit ",(0,s.jsx)(t.code,{children:"__declspec(dllexport)"})," declarations. The default is to not use a defile."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exported_deps"}),": Dependencies that will also appear to belong to any rules that depend on this one. This has two effects: * Exported dependencies will also be included in the link line of dependents of this rules, but normal dependencies will not. * When ",(0,s.jsx)(t.code,{children:"reexport_all_header_dependencies = False"}),", only exported headers of the rules specified here are re-exported."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exported_headers"}),": The set of header files that are made available for inclusion to the source files in the target and all targets that transitively depend on it. These should be specified as either a list of header files or a dictionary of header names to header files. The headers can be included with ",(0,s.jsx)(t.code,{children:'#include "$HEADER_NAMESPACE/$HEADER_NAME"'})," or ",(0,s.jsx)(t.code,{children:"#include <$HEADER_NAMESPACE/$HEADER_NAME>"}),", where ",(0,s.jsx)(t.code,{children:"$HEADER_NAMESPACE"})," is the value of the target's ",(0,s.jsx)(t.code,{children:"header_namespace"})," attribute, and ",(0,s.jsx)(t.code,{children:"$HEADER_NAME"})," is the header name if specified, and the filename of the header file otherwise. Note that the header name can contain forward slashes (",(0,s.jsx)(t.code,{children:"/"}),"). See ",(0,s.jsx)(t.code,{children:"header_namespace"})," for more information."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exported_linker_flags"}),": Flags to add to the linker command line when the output from this rule, or the output from any rule that transitively depends on this rule, is used in a link operation."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exported_platform_deps"}),": Platform specific dependencies that will also appear to belong to any rules that depend on this one. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is a list of external dependencies (same format as ",(0,s.jsx)(t.code,{children:"exported_deps"}),") that are exported if the platform matches the regex. See ",(0,s.jsx)(t.code,{children:"exported_deps"})," for more information."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exported_platform_headers"}),": Platform specific header files. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is either a list of header files or a dictionary of header names to header files that will be made available for inclusion to the source files in the target and all targets that transitively depend on it if the platform matches the regex. See ",(0,s.jsx)(t.code,{children:"headers"})," for more information."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exported_platform_preprocessor_flags"}),": Platform specific exported preprocessor flags. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is a list of flags to use when preprocessing the source files in the target and all targets that transitively depend on it if the platform matches the regex. See ",(0,s.jsx)(t.code,{children:"exported_preprocessor_flags"})," for more information."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"header_namespace"}),": A path prefix when including headers of this target. Defaults to the path from the root of the repository to the directory where this target is defined. Can contain forward slashes (",(0,s.jsx)(t.code,{children:"/"}),"), but cannot start with one. See ",(0,s.jsx)(t.code,{children:"headers"})," for more information."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"header_only"}),": Indicates if this library only consists of headers or not. If this is set to ",(0,s.jsx)(t.code,{children:"True"}),", Buck will not link this library into any library that depends on it."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"local_linker_flags"}),": Flags to add to the linker command line whenever the output from this rule is used in a link operation ",(0,s.jsx)(t.em,{children:"driven by this rule"})," (e.g. when this rule links a shared library, but ",(0,s.jsx)(t.em,{children:"not"})," when the output is linked into a shared library by another rule's link group links)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"local_linker_script_flags"}),": Linker script lags to add to the linker command line whenever the output from this rule is used in a link operation ",(0,s.jsx)(t.em,{children:"driven by this rule"}),". Used by rules that need to treat linker script flags different from normal linker flags."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"platform_shared_lib"}),": Platform specific shared library. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element the path to the library. See ",(0,s.jsx)(t.code,{children:"shared_lib"})," for more information."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"platform_static_lib"}),": Platform specific static library. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element the path to the library. See ",(0,s.jsx)(t.code,{children:"static_lib"})," for more information."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"platform_static_pic_lib"}),": Platform specific static PIC library. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element the path to the library. See ",(0,s.jsx)(t.code,{children:"static_pic_lib"})," for more information."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"preferred_linkage"}),": Determines what linkage is used when the library is depended on by another target. To control how the dependencies of this library are linked, use ",(0,s.jsx)(t.code,{children:"link_style"})," instead."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"prestripped"}),": When set, skips running ",(0,s.jsx)(t.code,{children:"strip"})," commands when building this library."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"shared_lib"}),": The path to the library to use when performing shared linking."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"static_lib"}),": The path to the library to use when performing static linking."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"static_pic_lib"}),": The path to the library to use when performing static PIC linking."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"supported_platforms_regex"}),": If present, an un-anchored regex (in java.util.regex.Pattern syntax) that matches all platforms that this library supports. It will not be built for other platforms."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"supports_merged_linking"}),": Whether this rule supports building with the merged linking strategy when building for non-native binaries (e.g. when using ",(0,s.jsx)(t.code,{children:".buckconfig"})," s ",(0,s.jsx)(t.code,{children:"merged"})," setting)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"version"}),": A string denoting a meaningful version of this rule that is optionally passed to the linker as extra metadata."]}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"details",children:"Details"}),"\n",(0,s.jsx)(t.p,{children:"Examples:"}),"\n",(0,s.jsx)(t.p,{children:"A prebuilt library containing only headers that other libraries may need."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"\nprebuilt_cxx_library(\n  name = 'stdutil',\n  header_only = True,\n  header_dirs = [\n    'include',\n  ],\n)\n\n"})}),"\n",(0,s.jsx)(t.p,{children:"A prebuilt library with static and shared libs."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"\nprebuilt_cxx_library(\n  name = 'mylib',\n  soname = 'libmylib.so',\n  static_lib = 'libmylib.a',\n  static_pic_lib = 'libmylib_pic.a',\n  shared_lib = 'libmylib.so',\n  exported_headers = [\n    'mylib.h',\n  ],\n)\n\n"})}),"\n",(0,s.jsx)(t.p,{children:"A prebuilt library with multiple builds for multiple platforms."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"\nprebuilt_cxx_library(\n  name = 'mylib',\n  soname = 'libmylib.so',\n  platform_shared_lib = [\n    ('android-arm', 'android-arm/libmylib.so'),\n    ('android-x86', 'android-x86/libmylib.so'),\n    ('iphonesimulator-x86_64', 'iphonesimulator-x86_64/libmylib.so'),\n  ],\n  platform_static_lib = [\n    ('android-arm', 'android-arm/libmylib.a'),\n    ('android-x86', 'android-x86/libmylib.a'),\n    ('iphonesimulator-x86_64', 'iphonesimulator-x86_64/libmylib.a'),\n  ],\n  exported_headers = [\n    'mylib.h',\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);