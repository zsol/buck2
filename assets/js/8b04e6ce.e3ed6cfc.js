"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6640],{28453:(r,e,t)=>{t.d(e,{R:()=>a,x:()=>s});var o=t(96540);const n={},i=o.createContext(n);function a(r){const e=o.useContext(i);return o.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function s(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(n):r.components||n:a(r.components),o.createElement(i.Provider,{value:e},r.children)}},34260:(r,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"api/build/ActionErrorCtx","title":"ActionErrorCtx","description":"Methods available on ActionErrorCtx to help categorize the action failure. These categorizations should be finer grain, and most likely language specific.","source":"@site/../docs/api/build/ActionErrorCtx.md","sourceDirName":"api/build","slug":"/api/build/ActionErrorCtx","permalink":"/docs/api/build/ActionErrorCtx","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"Build APIs","permalink":"/docs/api/build/"},"next":{"title":"ActionErrorLocation","permalink":"/docs/api/build/ActionErrorLocation"}}');var n=t(74848),i=t(28453),a=t(56289);const s={},c="ActionErrorCtx",l={},d=[{value:"ActionErrorCtx.new_error_location",id:"actionerrorctxnew_error_location",level:2},{value:"ActionErrorCtx.new_sub_error",id:"actionerrorctxnew_sub_error",level:2},{value:"ActionErrorCtx.output_artifacts",id:"actionerrorctxoutput_artifacts",level:2},{value:"ActionErrorCtx.stderr",id:"actionerrorctxstderr",level:2},{value:"ActionErrorCtx.stdout",id:"actionerrorctxstdout",level:2}];function u(r){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",...(0,i.R)(),...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"actionerrorctx",children:"ActionErrorCtx"})}),"\n",(0,n.jsxs)(e.p,{children:["Methods available on ",(0,n.jsx)(e.code,{children:"ActionErrorCtx"})," to help categorize the action failure. These categorizations should be finer grain, and most likely language specific."]}),"\n",(0,n.jsx)(e.h2,{id:"actionerrorctxnew_error_location",children:"ActionErrorCtx.new_error_location"}),"\n",(0,n.jsx)("pre",{class:"language-python",children:(0,n.jsxs)("code",{children:["def ActionErrorCtx.new_error_location(\n*,\nfile: ",(0,n.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"}),",\nline: None | ",(0,n.jsx)(a.default,{to:"/docs/api/starlark/int",children:"int"})," = None,\n) -> ",(0,n.jsx)(a.default,{to:"/docs/api/build/ActionErrorLocation",children:"ActionErrorLocation"})]})}),"\n",(0,n.jsx)(e.p,{children:"Create a new error location, specifying a file path and an optional line number."}),"\n",(0,n.jsx)(e.p,{children:"The file path should be either a project-relative path, or an absolute path."}),"\n",(0,n.jsx)(e.hr,{}),"\n",(0,n.jsx)(e.h2,{id:"actionerrorctxnew_sub_error",children:"ActionErrorCtx.new_sub_error"}),"\n",(0,n.jsx)("pre",{class:"language-python",children:(0,n.jsxs)("code",{children:["def ActionErrorCtx.new_sub_error(\n*,\ncategory: ",(0,n.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"}),",\nmessage: None | ",(0,n.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"})," = None,\nlocations: None | list[",(0,n.jsx)(a.default,{to:"/docs/api/build/ActionErrorLocation",children:"ActionErrorLocation"}),"] | tuple[",(0,n.jsx)(a.default,{to:"/docs/api/build/ActionErrorLocation",children:"ActionErrorLocation"}),", ...] = None,\n) -> ",(0,n.jsx)(a.default,{to:"/docs/api/build/ActionSubError",children:"ActionSubError"})]})}),"\n",(0,n.jsx)(e.p,{children:"Create a new sub error, specifying an error category name, optional message, and an optional list of error locations."}),"\n",(0,n.jsx)(e.p,{children:"The category should be finer grain error categorizations provided by the rule authors,\nand tend to be language specific. These should not be any kind of shared concepts\namong all errors for all languages/rules. For example, timeouts and infra errors\nshould not go here - buck2 tries to categorize these types of errors automatically.\nAn example of a finer grain error category may be the error code for rustc outputs."}),"\n",(0,n.jsx)(e.p,{children:"'category': Required, useful for providing a more granular error category for action errors.\n'message': Optional, provide users with additional context about the error to help with debugging/understandability/resolution, etc.\n'locations': Optional, file path and line number of the error location, useful for external integration to highlight where the error is."}),"\n",(0,n.jsx)(e.p,{children:"The message will be emitted to the build report, and to the stderr in the error diagnostics\nsection."}),"\n",(0,n.jsx)(e.hr,{}),"\n",(0,n.jsx)(e.h2,{id:"actionerrorctxoutput_artifacts",children:"ActionErrorCtx.output_artifacts"}),"\n",(0,n.jsx)("pre",{class:"language-python",children:(0,n.jsxs)("code",{children:["ActionErrorCtx.output_artifacts: dict[",(0,n.jsx)(a.default,{to:"/docs/api/build/PromiseArtifact",children:"Artifact"}),", ",(0,n.jsx)(a.default,{to:"/docs/api/build/ArtifactValue",children:"ArtifactValue"}),"]"]})}),"\n",(0,n.jsxs)(e.p,{children:["Allows the output artifacts to be retrieve if ",(0,n.jsx)(e.a,{href:"https://buck2.build/docs/api/build/AnalysisActions/#analysisactionsrun",children:(0,n.jsx)(e.code,{children:"outputs_for_error_handler"})})," is set and the output artifact exists. This is useful for languages with structured error output, making the error retrieval process simpler."]}),"\n",(0,n.jsx)(e.p,{children:"This is also the recommended way to retrieve file path and line number, as reliably extracting that information\nfrom stdout/stderr can be challenging"}),"\n",(0,n.jsx)(e.hr,{}),"\n",(0,n.jsx)(e.h2,{id:"actionerrorctxstderr",children:"ActionErrorCtx.stderr"}),"\n",(0,n.jsx)("pre",{class:"language-python",children:(0,n.jsxs)("code",{children:["ActionErrorCtx.stderr: ",(0,n.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"})]})}),"\n",(0,n.jsx)(e.p,{children:"Retrieve the stderr of the failed action. Can use string/regex matching to identify the error in order to categorize it."}),"\n",(0,n.jsx)(e.hr,{}),"\n",(0,n.jsx)(e.h2,{id:"actionerrorctxstdout",children:"ActionErrorCtx.stdout"}),"\n",(0,n.jsx)("pre",{class:"language-python",children:(0,n.jsxs)("code",{children:["ActionErrorCtx.stdout: ",(0,n.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"})]})}),"\n",(0,n.jsx)(e.p,{children:"Retrieve the stdout of the failed action. Can use string/regex matching to identify the patterns in order to categorize it."})]})}function h(r={}){const{wrapper:e}={...(0,i.R)(),...r.components};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(u,{...r})}):u(r)}}}]);