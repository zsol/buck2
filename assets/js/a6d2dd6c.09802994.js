"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5365],{28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var r=s(96540);const n={},a=r.createContext(n);function i(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(a.Provider,{value:t},e.children)}},57978:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"prelude/rules/erlang/erlang_release","title":"erlang_release","description":"erlang\\\\_release","source":"@site/../docs/prelude/rules/erlang/erlang_release.md","sourceDirName":"prelude/rules/erlang","slug":"/prelude/rules/erlang/erlang_release","permalink":"/docs/prelude/rules/erlang/erlang_release","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"erlang_otp_binaries","permalink":"/docs/prelude/rules/erlang/erlang_otp_binaries"},"next":{"title":"erlang_test","permalink":"/docs/prelude/rules/erlang/erlang_test"}}');var n=s(74848),a=s(28453);s(56289);const i={},l="erlang_release",o={},c=[{value:"erlang_release",id:"erlang_release-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"erlang_release",children:"erlang_release"})}),"\n",(0,n.jsx)(t.h2,{id:"erlang_release-1",children:"erlang_release"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'def erlang_release(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _toolchain: str = "gh_facebook_buck2_shims_meta//:erlang-default",\n    applications: list[str | (str, str)],\n    contacts: list[str] = [],\n    include_erts: bool = False,\n    labels: list[str] = [],\n    os_env: None | dict[str, str] = None,\n    overlays: dict[str, list[str]] = {},\n    release_name: None | str = None,\n    version: str = "1.0.0",\n) -> None\n'})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"erlang_release"})," target builds OTP releases. Please refer to the ",(0,n.jsx)(t.a,{href:"https://www.erlang.org/doc/design_principles/release_structure.html",children:"OTP documentation"})," for more details about releases."]}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"applications"}),": This field specifies the list of applications that the release should start in the given order, and optionally the start type. Top-level applications without given start type are started with type ",(0,n.jsx)(t.a,{href:"https://www.erlang.org/doc/man/application.html#type-restart_type",children:(0,n.jsx)(t.code,{children:"permanent"})}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"include_erts"}),": This field controls whether OTP applications and the Erlang runtime system should be included as part of the release. Please note, that at the moment the erts folder is just ",(0,n.jsx)(t.code,{children:"erts/"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"os_env"}),": This attribute allows to set additional values for the operating system environment for invocations to the Erlang toolchain."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"overlays"}),": Overlays can be used to add files to the release. They are specified as mapping from path (from the release root) to list of targets. The targets files are places ",(0,n.jsx)(t.strong,{children:"flat"})," at the target location with their basename."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"release_name"}),": The release name can explicitly be set by this field. This overwrites the default from the target name."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"version"}),": The ",(0,n.jsx)(t.code,{children:"version"})," field specifies the release version. The release version is used in the release resource file, and is part of the path for the folder containing the boot scripts."]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"details",children:"Details"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"erlang_release"})," target does by default (without overlays) package:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"applications that are required to start the release"}),"\n",(0,n.jsxs)(t.li,{children:["release resource file ",(0,n.jsx)(t.code,{children:"<relname>.rel"})," (see ",(0,n.jsx)(t.a,{href:"https://www.erlang.org/doc/man/rel.html",children:"rel(4)"}),")"]}),"\n",(0,n.jsxs)(t.li,{children:["boot script ",(0,n.jsx)(t.code,{children:"start.script"})," (see ",(0,n.jsx)(t.a,{href:"https://www.erlang.org/doc/man/script.html",children:"rel(4)"}),")"]}),"\n",(0,n.jsxs)(t.li,{children:["binary boot script ",(0,n.jsx)(t.code,{children:"start.boot"})]}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"bin/release_variables"})}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"release_variables"})," file contains release name, version, and erts version in shell syntax, e.g."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'ERTS_VSN="12.1.2"\nREL_NAME="rel1"\nREL_VSN="1.0.0"\n'})}),"\n",(0,n.jsxs)(t.p,{children:["The target name doubles as the default release name. If the ",(0,n.jsx)(t.code,{children:"release_name"})," attribute is used, the release name will be\nsources from there instead."]}),"\n",(0,n.jsx)(t.p,{children:"Examples:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'erlang_release(\n    name = "world",\n    version = "1.0.0",\n    applications = [\n        "//apps//app_a:app_a",\n        "//apps//app_b:app_b",\n    ],\n    overlays = {\n        "releases/1.0.0": [\n            ":sys.config.src",\n        ],\n        "bin": [\n            ":start.sh",\n        ],\n    },\n)\n\nexport_file(\n    name = "sys.config.src",\n    src = "sys.config",\n)\n\nexport_file(\n    name = "start.sh",\n    src = "start.sh",\n)\n'})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);