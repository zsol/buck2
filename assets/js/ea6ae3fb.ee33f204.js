"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2998],{22251:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>_,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"prelude/rules/android/android_aar","title":"android_aar","description":"android\\\\_aar","source":"@site/../docs/prelude/rules/android/android_aar.md","sourceDirName":"prelude/rules/android","slug":"/prelude/rules/android/android_aar","permalink":"/docs/prelude/rules/android/android_aar","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"android","permalink":"/docs/prelude/rules/android/"},"next":{"title":"android_app_modularity","permalink":"/docs/prelude/rules/android/android_app_modularity"}}');var t=s(74848),i=s(28453);s(56289);const a={},o="android_aar",l={},d=[{value:"android_aar",id:"android_aar-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"android_aar",children:"android_aar"})}),"\n",(0,t.jsx)(n.h2,{id:"android_aar-1",children:"android_aar"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def android_aar(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _android_toolchain: str = "gh_facebook_buck2_shims_meta//:android",\n    _apple_platforms: dict[str, str] = {},\n    _cxx_toolchain: str = gh_facebook_buck2_shims_meta//:android-hack,\n    _is_building_android_binary: bool = True,\n    _is_force_single_cpu: bool = False,\n    _is_force_single_default_cpu: bool = False,\n    _java_toolchain: str = "gh_facebook_buck2_shims_meta//:java_for_android",\n    abi_generation_mode: None | str = None,\n    annotation_processing_tool: None | str = None,\n    annotation_processor_deps: list[str] = [],\n    annotation_processor_params: list[str] = [],\n    annotation_processors: list[str] = [],\n    build_config_values: list[str] = [],\n    build_config_values_file: None | str = None,\n    compress_asset_libraries: bool = False,\n    contacts: list[str] = [],\n    cpu_filters: list[str] = ["arm64", "armv7", "x86", "x86_64"],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    enable_relinker: bool = False,\n    excluded_java_deps: list[str] = [],\n    extra_arguments: list[str] = [],\n    extra_kotlinc_arguments: list[str] = [],\n    friend_paths: list[str] = [],\n    include_build_config_class: bool = False,\n    java_version: None | str = None,\n    javac: None | str = None,\n    labels: list[str] = [],\n    language: None | str = None,\n    licenses: list[str] = [],\n    manifest: None | str = None,\n    manifest_entries: dict[str, typing.Any] = {},\n    manifest_file: None | str = None,\n    manifest_skeleton: str,\n    maven_coords: None | str = None,\n    min_sdk_version: None | int = None,\n    native_library_bolt_args: None | dict[str, list[str]] = None,\n    native_library_merge_code_generator: None | str = None,\n    native_library_merge_glue: None | str = None,\n    native_library_merge_linker_args: None | dict[str, list[str]] = None,\n    native_library_merge_linker_args_all: list[str] = [],\n    native_library_merge_map: None | dict[str, list[str]] = None,\n    native_library_merge_non_asset_libs: bool = False,\n    native_library_merge_sequence: None | list = None,\n    native_library_merge_sequence_blocklist: None | list[str] = None,\n    never_mark_as_unused_dependency: None | bool = None,\n    non_exec_dep_plugins_deprecated: list[str | (str, list[str])] = [],\n    on_unused_dependencies: None | str = None,\n    package_asset_libraries: bool = True,\n    package_resources: bool = True,\n    plugins: list[str | (str, list[str])] = [],\n    proguard_config: None | str = None,\n    relinker_extra_args: list[str] = [],\n    relinker_extra_deps: list[str] = [],\n    relinker_whitelist: list[str] = [],\n    remove_classes: list[str] = [],\n    required_for_source_only_abi: bool = False,\n    resource_union_package: None | str = None,\n    resources: list[str] = [],\n    resources_root: None | str = None,\n    runtime_deps: list[str] = [],\n    source: None | str = None,\n    source_abi_verification_mode: None | str = None,\n    source_only_abi_deps: list[str] = [],\n    srcs: list[str] = [],\n    strip_libraries: bool = True,\n    target: None | str = None,\n    use_jvm_abi_gen: None | bool = None,\n) -> None\n'})}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.code,{children:"android_aar()"})," rule is used to generate an Android AAR."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": name of the target"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"build_config_values"}),": See the documentation on the values argument for ",(0,t.jsx)(n.code,{children:"android_build_config()"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"include_build_config_class"}),": Whether to include the ",(0,t.jsx)(n.code,{children:"BuildConfig"})," class files in the final .aar file. Needs to be set to ",(0,t.jsx)(n.code,{children:"True"})," if any build_config_values are specified. This is normally only needed if the build tool that is consuming the .aar file does not generate ",(0,t.jsx)(n.code,{children:"BuildConfig"})," classes. Note: the AAR format does not specify a way to pass defaults that should be injected into the final ",(0,t.jsx)(n.code,{children:"BuildConfig"})," class, therefore that information might need to be replicated manually in the build that's consuming the .aar file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"javac"}),": Specifies the Java compiler program to use for this rule. The value is a source path or an execution dep (e.g., //foo/bar",":bar",'). Overrides the value in "javac" in the "tools" section of ',(0,t.jsx)(n.code,{children:".buckconfig"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"manifest_skeleton"}),": The skeleton manifest file used to generate the final ",(0,t.jsx)(n.code,{children:"AndroidManifest.xml"})," . May either be a file or an ",(0,t.jsx)(n.code,{children:"android_manifest()"})," target."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"native_library_merge_linker_args_all"}),": Extra linker arguments passed to all merged libraries."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"non_exec_dep_plugins_deprecated"}),": Plugins that do not use the execution platform. This exists for historical reasons, and should not be used. Use ",(0,t.jsx)(n.code,{children:"plugins"})," instead - plugins should be configured for the execution platform since that is where they are used."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"plugins"}),": List of plugins that should be run during compilation of the target. A list of strings may additionally be provided in order to pass additional arguments to the plugin."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"relinker_extra_args"}),": Extra arguments passed when relinking all libraries."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"remove_classes"}),": List of classes to remove from the output aar. It removes classes from the target's own sources, and its dependencies."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"details",children:"Details"}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.a,{href:"https://developer.android.com/studio/projects/android-library#aar-contents",children:"official Android documentation"})," for details about the ",(0,t.jsx)(n.code,{children:".aar"})," format."]}),"\n",(0,t.jsx)(n.p,{children:"Examples:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\nandroid_resource(\n  name = 'res',\n  res = 'res',\n  assets = 'assets',\n  package = 'com.example',\n)\n\nandroid_library(\n  name = 'lib',\n  srcs = glob(['**/*.java']),\n)\n\nandroid_aar(\n  name = 'app',\n  manifest_skeleton = 'AndroidManifestSkeleton.xml',\n  deps = [\n    ':res',\n    ':lib',\n  ],\n)\n\n"})})]})}function _(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(96540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);