"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[794],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(96540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}},77518:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"prelude/rules/uncategorized/ndk_toolchain","title":"ndk_toolchain","description":"ndk\\\\_toolchain","source":"@site/../docs/prelude/rules/uncategorized/ndk_toolchain.md","sourceDirName":"prelude/rules/uncategorized","slug":"/prelude/rules/uncategorized/ndk_toolchain","permalink":"/docs/prelude/rules/uncategorized/ndk_toolchain","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"legacy_toolchain","permalink":"/docs/prelude/rules/uncategorized/legacy_toolchain"}}');var s=n(74848),r=n(28453);n(56289);const a={},o="ndk_toolchain",l={},c=[{value:"ndk_toolchain",id:"ndk_toolchain-1",level:2},{value:"Parameters",id:"parameters",level:4}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"ndk_toolchain",children:"ndk_toolchain"})}),"\n",(0,s.jsx)(t.h2,{id:"ndk_toolchain-1",children:"ndk_toolchain"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'def ndk_toolchain(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    contacts: list[str] = [],\n    cxx_runtime: None | str = None,\n    cxx_toolchain: str,\n    default_host_platform: None | str = None,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    objdump: str,\n    shared_runtime_path: None | str = None,\n    strip_apk_libs_flags: None | list[str] = None,\n) -> None\n'})}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);