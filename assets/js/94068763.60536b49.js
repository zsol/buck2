"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5236],{28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var t=n(96540);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}},98056:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"prelude/rules/apple/apple_resource_bundle","title":"apple_resource_bundle","description":"apple\\\\resource\\\\bundle","source":"@site/../docs/prelude/rules/apple/apple_resource_bundle.md","sourceDirName":"prelude/rules/apple","slug":"/prelude/rules/apple/apple_resource_bundle","permalink":"/docs/prelude/rules/apple/apple_resource_bundle","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"apple_resource","permalink":"/docs/prelude/rules/apple/apple_resource"},"next":{"title":"apple_resource_dedupe_alias","permalink":"/docs/prelude/rules/apple/apple_resource_dedupe_alias"}}');var r=n(74848),i=n(28453);n(56289);const l={},o="apple_resource_bundle",a={},c=[{value:"apple_resource_bundle",id:"apple_resource_bundle-1",level:2},{value:"Parameters",id:"parameters",level:4}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"apple_resource_bundle",children:"apple_resource_bundle"})}),"\n",(0,r.jsx)(s.h2,{id:"apple_resource_bundle-1",children:"apple_resource_bundle"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'def apple_resource_bundle(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _apple_toolchain: str = "gh_facebook_buck2_shims_meta//:apple-resources",\n    _apple_tools: str = "prelude//apple/tools:apple-tools",\n    _bundle_target_name: str,\n    _compile_resources_locally_override: None | bool = None,\n    _info_plist_identify_build_system_default: bool = False,\n    asset_catalogs_compilation_options: dict[str, typing.Any] = {},\n    binary: None | str = None,\n    copy_public_framework_headers: None | bool = None,\n    deps: list[str] = [],\n    extension: str,\n    ibtool_flags: None | list[str] = None,\n    info_plist: str,\n    info_plist_identify_build_system: None | bool = None,\n    info_plist_substitutions: dict[str, str] = {},\n    labels: list[str] = [],\n    module_map: None | str = None,\n    privacy_manifest: None | str = None,\n    product_name: None | str = None,\n    product_name_from_module_name: bool = False,\n    resource_group: None | str = None,\n    resource_group_map: None | str = None,\n    universal: None | bool = None,\n) -> None\n'})}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"name"}),": name of the target"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"asset_catalogs_compilation_options"}),": A dict holding parameters for asset catalogs compiler (actool). Its options include:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"notices"})," (defaults to ",(0,r.jsx)(s.code,{children:"True"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"warnings"})," (defaults to ",(0,r.jsx)(s.code,{children:"True"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"errors"})," (defaults to ",(0,r.jsx)(s.code,{children:"True"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"compress_pngs"})," (defaults to ",(0,r.jsx)(s.code,{children:"True"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"optimization"})," (defaults to ",(0,r.jsx)(s.code,{children:"'space'"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"output_format"})," (defaults to ",(0,r.jsx)(s.code,{children:"'human-readable-text'"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"extra_flags"})," (defaults to ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"info_plist_substitutions"}),": A dictionary that assigns variable names to their values. It is used for variable substitution when processing the file specified in ",(0,r.jsx)(s.code,{children:"info_plist"}),". For example if this argument is set to ",(0,r.jsx)(s.code,{children:"{'VAR': 'MyValue'}"}),", then each occurrence of ",(0,r.jsx)(s.code,{children:"$(VAR)"})," or ",(0,r.jsx)(s.code,{children:"${VAR}"})," in the file will be replaced by ",(0,r.jsx)(s.code,{children:"MyValue"}),"."]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);