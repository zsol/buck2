"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2460],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var i=s(96540);const n={},r=i.createContext(n);function o(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:t},e.children)}},58201:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"prelude/rules/apple/swift_toolchain","title":"swift_toolchain","description":"swift\\\\_toolchain","source":"@site/../docs/prelude/rules/apple/swift_toolchain.md","sourceDirName":"prelude/rules/apple","slug":"/prelude/rules/apple/swift_toolchain","permalink":"/docs/prelude/rules/apple/swift_toolchain","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"scene_kit_assets","permalink":"/docs/prelude/rules/apple/scene_kit_assets"},"next":{"title":"core","permalink":"/docs/prelude/rules/core/"}}');var n=s(74848),r=s(28453);s(56289);const o={},a="swift_toolchain",l={},c=[{value:"swift_toolchain",id:"swift_toolchain-1",level:2},{value:"Parameters",id:"parameters",level:4}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"swift_toolchain",children:"swift_toolchain"})}),"\n",(0,n.jsx)(t.h2,{id:"swift_toolchain-1",children:"swift_toolchain"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'def swift_toolchain(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _internal_sdk_path: None | str = None,\n    _library_interface_uses_swiftinterface: bool = select({"prelude//features/apple:swift_library_interface_uses_swiftinterface_enabled": True, "DEFAULT": False}),\n    _swiftc_wrapper: str = "prelude//apple/tools:swift_exec",\n    architecture: str,\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    make_swift_comp_db: str = "prelude//apple/tools:make_swift_comp_db",\n    make_swift_interface: str = "prelude//apple/tools:make_swift_interface",\n    object_format: str = "object",\n    placeholder_tool: None | str = None,\n    platform_path: None | str = None,\n    provide_swift_debug_info: bool = True,\n    resource_dir: None | str = None,\n    runtime_paths_for_bundling: list[str] = [],\n    runtime_paths_for_linking: list[str] = [],\n    sdk_module_path_prefixes: dict[str, str] = {},\n    sdk_modules: list[str] = [],\n    sdk_path: None | str = None,\n    serialized_diags_to_json: None | str = None,\n    supports_explicit_module_debug_serialization: bool = False,\n    supports_incremental_file_hashing: bool = False,\n    supports_relative_resource_dir: bool = False,\n    swift_experimental_features: dict[str, list[str]] = {"5": [], "6": []},\n    swift_ide_test_tool: None | str = None,\n    swift_stdlib_tool: str,\n    swift_stdlib_tool_flags: list[str] = [],\n    swift_upcoming_features: dict[str, list[str]] = {"5": [], "6": []},\n    swiftc: str,\n    swiftc_flags: list[str] = [],\n    use_depsfiles: bool = False,\n) -> None\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);