"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3951],{28453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>a});var n=t(96540);const s={},i=n.createContext(s);function o(e){const r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:r},e.children)}},44386:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"prelude/rules/android/android_resource","title":"android_resource","description":"android\\\\_resource","source":"@site/../docs/prelude/rules/android/android_resource.md","sourceDirName":"prelude/rules/android","slug":"/prelude/rules/android/android_resource","permalink":"/docs/prelude/rules/android/android_resource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"android_prebuilt_aar","permalink":"/docs/prelude/rules/android/android_prebuilt_aar"},"next":{"title":"apk_genrule","permalink":"/docs/prelude/rules/android/apk_genrule"}}');var s=t(74848),i=t(28453);t(56289);const o={},a="android_resource",d={},l=[{value:"android_resource",id:"android_resource-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"android_resource",children:"android_resource"})}),"\n",(0,s.jsx)(r.h2,{id:"android_resource-1",children:"android_resource"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'def android_resource(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _android_toolchain: str = "gh_facebook_buck2_shims_meta//:android",\n    _apple_platforms: dict[str, str] = {},\n    _build_only_native_code: bool = select({"prelude//android/constraints:build_only_native_code": True, "DEFAULT": False}),\n    _java_toolchain: str = "gh_facebook_buck2_shims_meta//:java_for_android",\n    allowlisted_locales: None | list[str] = None,\n    assets: None | str | dict[str, str] = None,\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    has_whitelisted_strings: bool = False,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    manifest: None | str = None,\n    package: None | str = None,\n    project_assets: None | str = None,\n    project_res: None | str = None,\n    res: None | str | dict[str, str] = None,\n    resource_union: bool = False,\n) -> None\n'})}),"\n",(0,s.jsxs)(r.p,{children:["An ",(0,s.jsx)(r.code,{children:"android_resource()"})," rule is used to bundle Android resources that are traditionally stored in ",(0,s.jsx)(r.code,{children:"res"})," and ",(0,s.jsx)(r.code,{children:"assets"})," directories."]}),"\n",(0,s.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"name"}),": name of the target"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"deps"}),": Other ",(0,s.jsx)(r.code,{children:"android_resource"})," rules to include via ",(0,s.jsx)(r.code,{children:"-S"})," when running ",(0,s.jsx)(r.code,{children:"aapt"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"manifest"}),": An optional ",(0,s.jsx)(r.a,{href:"http://developer.android.com/guide/topics/manifest/manifest-intro.html",children:"Android Manifest"})," for the to declare any permissions or intents it may need or want to handle. May either be a file or an ",(0,s.jsx)(r.code,{children:"android_manifest()"})," target."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"package"}),": Java package for the ",(0,s.jsx)(r.code,{children:"R.java"})," file that will be generated for these resources."]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"details",children:"Details"}),"\n",(0,s.jsxs)(r.p,{children:["The output of an ",(0,s.jsx)(r.code,{children:"android_resource()"})," is an ",(0,s.jsx)(r.code,{children:"R.txt"})," file\ngenerated via ",(0,s.jsx)(r.code,{children:"aapt --output-text-symbols"}),"."]}),"\n",(0,s.jsx)(r.p,{children:"Examples:"}),"\n",(0,s.jsxs)(r.p,{children:["Most of the time, an ",(0,s.jsx)(r.code,{children:"android_resource"})," rule defines only ",(0,s.jsx)(r.code,{children:"name"}),", ",(0,s.jsx)(r.code,{children:"res"}),", and ",(0,s.jsx)(r.code,{children:"package"}),". By convention,\nsuch simple rules are often named ",(0,s.jsx)(r.code,{children:"res"}),":"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"\nandroid_resource(\n  name = 'res',\n  res = subdir_glob([('res', '**')]),\n  package = 'com.example',\n)\n\n"})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);