"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9506],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var i=s(96540);const r={},t=i.createContext(r);function c(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(t.Provider,{value:n},e.children)}},65028:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"users/commands/uquery","title":"uquery","description":"This document provides an overview of the commands and options available under buck2 uquery.","source":"@site/../docs/users/commands/uquery.generated.md","sourceDirName":"users/commands","slug":"/users/commands/uquery","permalink":"/docs/users/commands/uquery","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"uquery","title":"uquery"},"sidebar":"main","previous":{"title":"test","permalink":"/docs/users/commands/test"},"next":{"title":"utargets","permalink":"/docs/users/commands/utargets"}}');var r=s(74848),t=s(28453);const c={id:"uquery",title:"uquery"},l="uquery",d={},o=[{value:"<code>buck2 uquery</code>",id:"buck2-uquery",level:2},{value:"Arguments:",id:"arguments",level:3},{value:"Options:",id:"options",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"uquery",children:"uquery"})}),"\n",(0,r.jsxs)(n.p,{children:["This document provides an overview of the commands and options available under ",(0,r.jsx)(n.code,{children:"buck2 uquery"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"buck2-uquery",children:(0,r.jsx)(n.code,{children:"buck2 uquery"})}),"\n",(0,r.jsx)(n.p,{children:"Perform queries on the unconfigured target graph"}),"\n",(0,r.jsxs)(n.p,{children:["The unconfigured target graph consists of the targets as they are\ndefined in the build files. In this graph, each target appears\nexactly once and ",(0,r.jsx)(n.code,{children:"select()"}),"s are in the unresolved form. For large\nqueries, the unconfigured graph may be much smaller than the\nconfigured graph and queries can be much more efficiently performed\nthere."]}),"\n",(0,r.jsxs)(n.p,{children:["When querying the unconfigured graph, dependencies appearing in all\nbranches of ",(0,r.jsx)(n.code,{children:"select()"})," dictionaries will be treated as dependencies."]}),"\n",(0,r.jsxs)(n.p,{children:["Run ",(0,r.jsx)(n.code,{children:"buck2 docs uquery"})," or\n",(0,r.jsx)(n.a,{href:"https://buck2.build/docs/users/query/uquery/",children:"https://buck2.build/docs/users/query/uquery/"}),"\nfor more documentation about the functions available in uquery\nexpressions."]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.p,{children:"Print all the attributes of a target"}),"\n",(0,r.jsxs)(n.p,{children:["`buck2 uquery //java/com/example/app",":amazing"," --output-all-attributes"]}),"\n",(0,r.jsxs)(n.p,{children:["List the deps of a target (special characters in a target will require quotes):\n",(0,r.jsx)(n.code,{children:"buck2 uquery 'deps(\"//java/com/example/app:amazing+more\")'"})]}),"\n",(0,r.jsx)(n.p,{children:"select() encoding:"}),"\n",(0,r.jsxs)(n.p,{children:["When printed, values with ",(0,r.jsx)(n.code,{children:"select()"}),"s use a special json encoding."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:'1 + select({"//:a": 1, "DEFAULT": 2})'})," will be encoded as:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:'{"//:a": 1, "DEFAULT": 2}}]}'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),": ",(0,r.jsx)(n.code,{children:"buck2 uquery [OPTIONS] <QUERY> [QUERY_ARGS]..."})]}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"<QUERY>"}),"\nthe query to evaluate"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"<QUERY_ARGS>"}),"\nlist of literals for a multi-query (one containing ",(0,r.jsx)(n.code,{children:"%s"})," or ",(0,r.jsx)(n.code,{children:"%Ss"}),")"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"-A, --output-all-attributes"}),"\nOutput all attributes, equivalent of --output-attribute ''."]}),"\n",(0,r.jsx)(n.p,{children:"Avoid using this flag in automation because it may be expensive to produce certain attributes, and because it makes harder to track which special attributes are used."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"-B, --output-basic-attributes"}),"\nOutput basic attributes, namely those the user can supply, plus rule type and package name"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"-a, --output-attribute <ATTRIBUTE>"}),'\nRegular expressions to match attributes. Regular expressions are used in "search" mode, so for example empty string matches all attributes including special attributes.']}),"\n",(0,r.jsxs)(n.p,{children:["When using in automation, please specify the regular expression to match the attribute precisely, for example ",(0,r.jsx)(n.code,{children:"--output-attribute '^headers$'"})," to make it easier to track which special attributes are used."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--output-attributes <ATTRIBUTE>"}),"\nDeprecated: Use ",(0,r.jsx)(n.code,{children:"--output-attribute"})," instead."]}),"\n",(0,r.jsx)(n.p,{children:"List of space-separated attributes to output, --output-attributes attr1 attr2."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--json"}),"\nOutput in JSON format"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--dot"}),"\nOutput in Graphviz Dot format"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--dot-compact"}),"\nOutput in a more compact format than Graphviz Dot"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--output-format <dot|dot_compact|json|starlark|html>"}),"\nOutput format (default: list)."]}),"\n",(0,r.jsx)(n.p,{children:"dot -  dot graph format."}),"\n",(0,r.jsx)(n.p,{children:"dot_compact - compact alternative to dot format."}),"\n",(0,r.jsx)(n.p,{children:"json - JSON format."}),"\n",(0,r.jsx)(n.p,{children:"starlark - targets are printed like starlark code that would produce them.\nhtml - html file containing interactive target graph."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Possible values:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"dot"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"json"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"dot_compact"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"starlark"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"html"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"-m, --modifier <VALUE>"}),"\nThis option is not used"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"-c, --config <SECTION.OPTION=VALUE>"}),"\nList of config options"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--config-file <PATH>"}),"\nList of config file paths"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"--fake-host <HOST>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Possible values:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"default"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"linux"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"macos"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"windows"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"--fake-arch <ARCH>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Possible values:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"default"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"aarch64"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"x8664"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--fake-xcode-version <VERSION-BUILD>"}),"\nValue must be formatted as: version-build (e.g., 14.3.0-14C18 or 14.1-14B47b)"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--reuse-current-config"}),"\nRe-uses any ",(0,r.jsx)(n.code,{children:"--config"})," values (inline or via modefiles) if there's a previous command, otherwise the flag is ignored."]}),"\n",(0,r.jsxs)(n.p,{children:["If there is a previous command and ",(0,r.jsx)(n.code,{children:"--reuse-current-config"})," is set, then the old config is used, ignoring any overrides."]}),"\n",(0,r.jsx)(n.p,{children:"If there is no previous command but the flag was set, then the flag is ignored, the command behaves as if the flag was not set at all."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--exit-when-different-state"}),"\nUsed for exiting a concurrent command when a different state is detected"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--preemptible <PREEMPTIBLE>"}),"\nUsed to configure when this command could be preempted by another command for the same isolation dir."]}),"\n",(0,r.jsx)(n.p,{children:"Normally, when you run two commands - from different terminals, say - buck2 will attempt to run them in parallel. However, if the two commands are based on different state, that is they either have different configs or different filesystem states, buck2 cannot run them in parallel. The default behavior in this case is to block the second command until the first completes."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Possible values:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"never"}),": (default) When another command starts that cannot run in parallel with this one, block that command"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"always"}),": When another command starts, interrupt this command, ",(0,r.jsx)(n.em,{children:"even if they could run in parallel"}),". There is no good reason to use this other than that it provides slightly nicer superconsole output"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ondifferentstate"}),": When another command starts that cannot run in parallel with this one, interrupt this command"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--disable-starlark-types"}),"\nDisable runtime type checking in Starlark interpreter."]}),"\n",(0,r.jsx)(n.p,{children:"This option is not stable, and can be used only locally to diagnose evaluation performance problems."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--stack"}),"\nRecord or show target call stacks."]}),"\n",(0,r.jsx)(n.p,{children:"Starlark call stacks will be included in duplicate targets error."}),"\n",(0,r.jsxs)(n.p,{children:["If a command outputs targets (like ",(0,r.jsx)(n.code,{children:"targets"})," command), starlark call stacks will be printed after the targets."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--console <super|simple|...>"}),"\nWhich console to use for this command"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default value: ",(0,r.jsx)(n.code,{children:"auto"})]}),"\n",(0,r.jsxs)(n.li,{children:["Possible values:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"auto"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"none"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"simple"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"simplenotty"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"simpletty"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"super"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--ui <UI>"}),"\nConfigure additional superconsole ui components."]}),"\n",(0,r.jsx)(n.p,{children:"Accepts a comma-separated list of superconsole components to add. Possible values are:"}),"\n",(0,r.jsx)(n.p,{children:"dice - shows information about evaluated dice nodes debugevents - shows information about the flow of events from buckd"}),"\n",(0,r.jsx)(n.p,{children:"These components can be turned on/off interactively. Press 'h' for help when superconsole is active."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Possible values:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"dice"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"debugevents"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"io"}),": I/O panel"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"re"}),": RE panel"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--no-interactive-console"}),"\nDisable console interactions"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--event-log <PATH>"}),"\nWrite events to this log file"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--write-build-id <PATH>"}),"\nWrite command invocation id into this file"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--unstable-write-invocation-record <PATH>"}),"\nWrite the invocation record (as JSON) to this path. No guarantees whatsoever are made regarding the stability of the format"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"--command-report-path <PATH>"}),"\nWrite the command report to this path. A command report is always written to ",(0,r.jsx)(n.code,{children:"buck-out/v2/<uuid>/command_report"})," even without this flag"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);