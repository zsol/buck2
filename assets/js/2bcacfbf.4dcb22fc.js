"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2456],{28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>a});var i=s(96540);const n={},r=i.createContext(n);function l(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(r.Provider,{value:t},e.children)}},56939:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"prelude/rules/d/d_test","title":"d_test","description":"d\\\\_test","source":"@site/../docs/prelude/rules/d/d_test.md","sourceDirName":"prelude/rules/d","slug":"/prelude/rules/d/d_test","permalink":"/docs/prelude/rules/d/d_test","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"d_library","permalink":"/docs/prelude/rules/d/d_library"},"next":{"title":"erlang","permalink":"/docs/prelude/rules/erlang/"}}');var n=s(74848),r=s(28453);s(56289);const l={},a="d_test",d={},o=[{value:"d_test",id:"d_test-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"d_test",children:"d_test"})}),"\n",(0,n.jsx)(t.h2,{id:"d_test-1",children:"d_test"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'def d_test(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    linker_flags: list[str] = [],\n    srcs: list[str] | dict[str, str] = [],\n    test_rule_timeout_ms: None | int = None,\n) -> None\n'})}),"\n",(0,n.jsxs)(t.p,{children:["A ",(0,n.jsx)(t.code,{children:"d_test()"})," rule is used to define a set of D source files that contain tests to run via D's unittest support. The source code of the test must provide a main() function."]}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"deps"}),": The set of dependencies of this rule. Each element should be a string specifying a d_library rule defined elsewhere (e.g. ",(0,n.jsx)(t.code,{children:"':foo'"})," or '//foo",":bar","')."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"labels"}),": A list of labels to be applied to these tests. These labels are arbitrary text strings and have no meaning within buck itself. They can, however, have meaning for you as a test author (e.g., ",(0,n.jsx)(t.code,{children:"smoke"})," or ",(0,n.jsx)(t.code,{children:"fast"}),"). A label can be used to filter or include a specific ",(0,n.jsx)(t.code,{children:"d_test()"})," rule when executing ",(0,n.jsx)(t.code,{children:"buck test"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"srcs"}),": The set of D source files to be compiled by this rule. Each element should be a string specifying a source file (e.g. ",(0,n.jsx)(t.code,{children:"'foo/bar.d'"}),")."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"test_rule_timeout_ms"}),": If set specifies the maximum amount of time (in milliseconds) in which all of the tests in this rule should complete. This overrides the default ",(0,n.jsx)(t.code,{children:"rule_timeout"})," if any has been specified in ",(0,n.jsx)(t.code,{children:".buckconfig"})," ."]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"details",children:"Details"}),"\n",(0,n.jsx)(t.p,{children:"Examples:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\n# A rule that builds and runs D test with a single source file.\nd_test(\n  name = 'test',\n  srcs = [\n    'test.d',\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);