"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8180],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(96540);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}},41408:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>_});const s=JSON.parse('{"id":"prelude/rules/apple/apple_xcuitest","title":"apple_xcuitest","description":"apple\\\\_xcuitest","source":"@site/../docs/prelude/rules/apple/apple_xcuitest.md","sourceDirName":"prelude/rules/apple","slug":"/prelude/rules/apple/apple_xcuitest","permalink":"/docs/prelude/rules/apple/apple_xcuitest","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"apple_xcframework","permalink":"/docs/prelude/rules/apple/apple_xcframework"},"next":{"title":"core_data_model","permalink":"/docs/prelude/rules/apple/core_data_model"}}');var i=t(74848),o=t(28453);t(56289);const l={},r="apple_xcuitest",a={},_=[{value:"apple_xcuitest",id:"apple_xcuitest-1",level:2},{value:"Parameters",id:"parameters",level:4}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"apple_xcuitest",children:"apple_xcuitest"})}),"\n",(0,i.jsx)(n.h2,{id:"apple_xcuitest-1",children:"apple_xcuitest"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def apple_xcuitest(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _apple_toolchain: str = "gh_facebook_buck2_shims_meta//:apple-default",\n    _apple_tools: str = "prelude//apple/tools:apple-tools",\n    _apple_xctoolchain: str = "gh_facebook_buck2_shims_meta//:apple-xctoolchain",\n    _apple_xctoolchain_bundle_id: str = "gh_facebook_buck2_shims_meta//:apple-xctoolchain-bundle-id",\n    _bundling_cache_buster: None | str = None,\n    _bundling_log_file_enabled: bool = False,\n    _bundling_log_file_level: None | str = None,\n    _code_signing_configuration: None | str = None,\n    _codesign_identities_command_override: None | str = None,\n    _codesign_type: None | str = None,\n    _compile_resources_locally_override: None | bool = None,\n    _embed_provisioning_profile_when_adhoc_code_signing: None | bool = None,\n    _enable_library_evolution: bool = select({"prelude//features/apple:swift_library_evolution_enabled": True, "DEFAULT": False}),\n    _fast_adhoc_signing_enabled_default: bool = select({"prelude//features/apple:fast_adhoc_signing_disabled": False, "prelude//features/apple:fast_adhoc_signing_enabled": True, "DEFAULT": True}),\n    _fast_provisioning_profile_parsing_enabled: bool = False,\n    _incremental_bundling_enabled: bool = False,\n    _info_plist_identify_build_system_default: bool = False,\n    _profile_bundling_enabled: bool = False,\n    _provisioning_profiles: str = "gh_facebook_buck2_shims_meta//xplat/buck2/platform/apple:provisioning_profiles",\n    _resource_bundle: None | str = None,\n    _skip_adhoc_resigning_scrubbed_frameworks_default: bool = select({"prelude//features/apple/constraints:skip_adhoc_resigning_scrubbed_frameworks_disabled": False, "prelude//features/apple/constraints:skip_adhoc_resigning_scrubbed_frameworks_enabled": True, "DEFAULT": False}),\n    _skip_adhoc_resigning_scrubbed_frameworks_override: None | bool = None,\n    _strict_provisioning_profile_search_default: bool = select({"prelude//features/apple:strict_provisioning_profile_search_enabled": True, "DEFAULT": True}),\n    _use_entitlements_when_adhoc_code_signing: None | bool = None,\n    binary: None | str = None,\n    code_signing_configuration: None | str = None,\n    codesign_identity: None | str = None,\n    codesign_type: None | str = None,\n    dsym_uses_parallel_linker: bool = select({"prelude//features/apple:dsym_uses_parallel_linker_enabled": True, "DEFAULT": False}),\n    embed_provisioning_profile_when_adhoc_code_signing: bool = False,\n    enable_library_evolution: None | bool = None,\n    entitlements_file: None | str = None,\n    extension: str = "app",\n    fast_adhoc_signing_enabled: None | bool = None,\n    incremental_bundling_enabled: bool = False,\n    info_plist: str,\n    info_plist_identify_build_system: None | bool = None,\n    info_plist_substitutions: dict[str, str] = {},\n    provisioning_profile_filter: None | str = None,\n    skip_adhoc_resigning_scrubbed_frameworks: None | bool = None,\n    strict_provisioning_profile_search: None | bool = None,\n    target_sdk_version: None | str = None,\n    test_bundle: str,\n    use_entitlements_when_adhoc_code_signing: bool = False,\n    validation_deps: list[str] = [],\n    versioned_macos_bundle: bool = select({"prelude//features/apple/constraints:versioned_macos_bundle_false": False, "prelude//features/apple/constraints:versioned_macos_bundle_true": True, "DEFAULT": False}),\n    xcode_scheme_settings: None | str = None,\n) -> None\n'})}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"}),": name of the target"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"xcode_scheme_settings"}),": Optional settings to set on schemes when this target is represented in Xcode."]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);