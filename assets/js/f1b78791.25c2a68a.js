"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5848],{28453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>o});var s=r(96540);const i={},n=s.createContext(i);function l(e){const t=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(n.Provider,{value:t},e.children)}},51166:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"prelude/rules/core/filegroup","title":"filegroup","description":"filegroup","source":"@site/../docs/prelude/rules/core/filegroup.md","sourceDirName":"prelude/rules/core","slug":"/prelude/rules/core/filegroup","permalink":"/docs/prelude/rules/core/filegroup","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"external_test_runner","permalink":"/docs/prelude/rules/core/external_test_runner"},"next":{"title":"genrule","permalink":"/docs/prelude/rules/core/genrule"}}');var i=r(74848),n=r(28453);r(56289);const l={},o="filegroup",a={},c=[{value:"filegroup",id:"filegroup-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"filegroup",children:"filegroup"})}),"\n",(0,i.jsx)(t.h2,{id:"filegroup-1",children:"filegroup"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'def filegroup(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    constraint_overrides: list[None | str] = [],\n    contacts: list[str] = [],\n    copy: bool = True,\n    default_host_platform: None | str = None,\n    executable_bit_override: None | bool = None,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    out: None | str = None,\n    platform_override: None | str = None,\n    srcs: list[str] | dict[str, str] = [],\n    uses_experimental_content_based_path_hashing: bool = False,\n) -> None\n'})}),"\n",(0,i.jsx)(t.p,{children:"This rule provides access to a set of files."}),"\n",(0,i.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"executable_bit_override"}),": Override the executable bit for every file in the filegroup. If not set, the executable bits are preserved. Cannot be used if ",(0,i.jsx)(t.code,{children:"copy"})," is set to false."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"out"}),": The name of the output directory. Defaults to the rule's name."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"srcs"}),": The set of files to include in this rule."]}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"details",children:"Details"}),"\n",(0,i.jsxs)(t.p,{children:["Files are accessible to ",(0,i.jsx)(t.code,{children:"genrule()"}),"s by using their relative path\nafter a ",(0,i.jsx)(t.code,{children:"$(location)"})," string parameter macro."]}),"\n",(0,i.jsxs)(t.p,{children:["Other rules may handle ",(0,i.jsx)(t.code,{children:"filegroup()"})," rules natively for attributes\nsuch as resources."]}),"\n",(0,i.jsx)(t.p,{children:"Examples:"}),"\n",(0,i.jsxs)(t.p,{children:["In this example a target exports ",(0,i.jsx)(t.code,{children:".xml"})," files from all subdirectories\nin ",(0,i.jsx)(t.code,{children:"resources"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"\nfilegroup(\n  name = 'example',\n  srcs = glob(['resources/**/*.xml']),\n)\n\ngenrule(\n  name = 'process_xml',\n  out = 'processed.xml',\n  cmd = '$(exe //example:tool) -in $(location :example)/resources/file.xml > $OUT',\n)\n\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);