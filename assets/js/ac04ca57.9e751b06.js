"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3495],{28453:(t,e,s)=>{s.d(e,{R:()=>a,x:()=>l});var n=s(96540);const i={},r=n.createContext(i);function a(t){const e=n.useContext(r);return n.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),n.createElement(r.Provider,{value:e},t.children)}},64248:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"prelude/rules/core/test_suite","title":"test_suite","description":"test\\\\_suite","source":"@site/../docs/prelude/rules/core/test_suite.md","sourceDirName":"prelude/rules/core","slug":"/prelude/rules/core/test_suite","permalink":"/docs/prelude/rules/core/test_suite","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"remote_file","permalink":"/docs/prelude/rules/core/remote_file"},"next":{"title":"toolchain_alias","permalink":"/docs/prelude/rules/core/toolchain_alias"}}');var i=s(74848),r=s(28453);s(56289);const a={},l="test_suite",o={},d=[{value:"test_suite",id:"test_suite-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(t){const e={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"test_suite",children:"test_suite"})}),"\n",(0,i.jsx)(e.h2,{id:"test_suite-1",children:"test_suite"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'def test_suite(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    test_deps: list[str] = [],\n) -> None\n'})}),"\n",(0,i.jsxs)(e.p,{children:["A ",(0,i.jsx)(e.code,{children:"test_suite()"})," is used to create a grouping of tests that should all be run by just testing this rule."]}),"\n",(0,i.jsx)(e.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"name"}),": name of the target"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]}),"\n",(0,i.jsx)(e.h4,{id:"details",children:"Details"}),"\n",(0,i.jsxs)(e.p,{children:["This rule can then be given to ",(0,i.jsx)(e.code,{children:"buck test"}),", and all tests that it depends on will be invoked.\nNote that the test_suite() target is not tested itself, it just tells buck to run other\ntests. It will not show up in calls to the external runner nor in the normal test output."]}),"\n",(0,i.jsx)(e.p,{children:"Examples:"}),"\n",(0,i.jsxs)(e.p,{children:["This test_suite() sets up two different sets of tests to run, 'all' tests and 'slow' tests. Note that ",(0,i.jsx)(e.code,{children:"all_tests"})," can depend on ",(0,i.jsx)(e.code,{children:"slow_tests"}),", and all three tests are run."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'\n# instrumentation_tests/BUCK:\nsh_test(\n    name = "instrumentation_tests",\n    test = "instrumentation_tests.sh",\n    visibility = ["PUBLIC"],\n)\n\n# integration_tests/BUCK:\nsh_test(\n    name = "integration_tests",\n    test = "integration_tests.sh",\n    visibility = ["PUBLIC"],\n)\n\n# unit_tests/BUCK:\nsh_test(\n    name = "unit_tests",\n    test = "unit_tests.sh",\n    visibility = ["PUBLIC"],\n)\n\n# BUCK:\ntest_suite(\n    name = "slow_tests",\n    tests = [\n        "//instrumentation_tests:instrumentation_tests",\n        "//integration_tests:integration_tests",\n    ],\n)\n\ntest_suite(\n    name = "all_tests",\n    tests = [\n        ":slow_tests",\n        "//unit_tests:unit_tests",\n    ],\n)\n\n'})}),"\n",(0,i.jsx)(e.p,{children:"Yields output like this when run:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"\n$ buck test //:slow_tests\n...\nRESULTS FOR //instrumentation_tests:instrumentation_tests //integration_tests:integration_tests\nPASS    <100ms  1 Passed   0 Skipped   0 Failed   //instrumentation_tests:instrumentation_tests\nPASS    <100ms  1 Passed   0 Skipped   0 Failed   //integration_tests:integration_tests\nTESTS PASSED\n...\n\n$ buck test //:all_tests\nRESULTS FOR //instrumentation_tests:instrumentation_tests //integration_tests:integration_tests //unit_tests:unit_tests\nPASS    <100ms  1 Passed   0 Skipped   0 Failed   //instrumentation_tests:instrumentation_tests\nPASS    <100ms  1 Passed   0 Skipped   0 Failed   //integration_tests:integration_tests\nPASS    <100ms  1 Passed   0 Skipped   0 Failed   //unit_tests:unit_tests\nTESTS PASSED\n\n"})})]})}function u(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(c,{...t})}):c(t)}}}]);