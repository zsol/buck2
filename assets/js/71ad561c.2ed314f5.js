"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8605],{28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>l});var r=i(96540);const n={},s=r.createContext(n);function a(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},35567:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"prelude/rules/android/prebuilt_native_library","title":"prebuilt_native_library","description":"prebuilt\\\\native\\\\library","source":"@site/../docs/prelude/rules/android/prebuilt_native_library.md","sourceDirName":"prelude/rules/android","slug":"/prelude/rules/android/prebuilt_native_library","permalink":"/docs/prelude/rules/android/prebuilt_native_library","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"prebuilt_jar","permalink":"/docs/prelude/rules/android/prebuilt_jar"},"next":{"title":"robolectric_test","permalink":"/docs/prelude/rules/android/robolectric_test"}}');var n=i(74848),s=i(28453);i(56289);const a={},l="prebuilt_native_library",d={},o=[{value:"prebuilt_native_library",id:"prebuilt_native_library-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"prebuilt_native_library",children:"prebuilt_native_library"})}),"\n",(0,n.jsx)(t.h2,{id:"prebuilt_native_library-1",children:"prebuilt_native_library"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'def prebuilt_native_library(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    has_wrap_script: bool = False,\n    is_asset: bool = False,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    native_libs: str,\n) -> None\n'})}),"\n",(0,n.jsxs)(t.p,{children:["A ",(0,n.jsx)(t.code,{children:"prebuilt_native_library()"})," rule is used to bundle native libraries (i.e., ",(0,n.jsx)(t.code,{children:".so"})," files) for Android."]}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"has_wrap_script"}),": When using an exopackage, if this parameter is set to ",(0,n.jsx)(t.code,{children:"True"}),", then the libraries for this rule are included in the primary APK even if native libraries would otherwise not be placed in it. This is intended for a native library directory that contains a ",(0,n.jsx)(t.a,{href:"https://developer.android.com/ndk/guides/wrap-script",children:"wrap.sh"})," script, which must be included in the primary APK to take effect. Only one of ",(0,n.jsx)(t.code,{children:"is_asset"})," and ",(0,n.jsx)(t.code,{children:"has_wrap_script"})," can be set for a rule."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"is_asset"}),": Normally native shared objects end up in a directory in the root of the APK named ",(0,n.jsx)(t.code,{children:"lib/"}),". If this parameter is set to ",(0,n.jsx)(t.code,{children:"True"}),", then these objects are placed in ",(0,n.jsx)(t.code,{children:"assets/lib/"}),". Placing shared objects in a non-standard location prevents Android from extracting them to the device's internal storage."]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"details",children:"Details"}),"\n",(0,n.jsx)(t.p,{children:"Examples:"}),"\n",(0,n.jsxs)(t.p,{children:["Most of the time, a ",(0,n.jsx)(t.code,{children:"prebuilt_native_library"})," is private to the ",(0,n.jsx)(t.code,{children:"android_library()"})," that uses it:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\nprebuilt_native_library(\n  name = 'native_libs',\n  native_libs = 'libs',\n)\n\nandroid_library(\n  name = 'my_lib',\n  srcs = glob(['*.java']),\n  deps = [\n    ':native_libs',\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);