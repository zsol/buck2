"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2698],{5697:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"prelude/rules/groovy/groovy_library","title":"groovy_library","description":"groovy\\\\_library","source":"@site/../docs/prelude/rules/groovy/groovy_library.md","sourceDirName":"prelude/rules/groovy","slug":"/prelude/rules/groovy/groovy_library","permalink":"/docs/prelude/rules/groovy/groovy_library","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"groovy","permalink":"/docs/prelude/rules/groovy/"},"next":{"title":"groovy_test","permalink":"/docs/prelude/rules/groovy/groovy_test"}}');var i=n(74848),t=n(28453);n(56289);const o={},l="groovy_library",a={},d=[{value:"groovy_library",id:"groovy_library-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(e){const s={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"groovy_library",children:"groovy_library"})}),"\n",(0,i.jsx)(s.h2,{id:"groovy_library-1",children:"groovy_library"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:'def groovy_library(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    annotation_processor_deps: list[str] = [],\n    annotation_processor_params: list[str] = [],\n    annotation_processors: list[str] = [],\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    exported_deps: list[str] = [],\n    exported_provided_deps: list[str] = [],\n    extra_arguments: list[str] = [],\n    extra_groovyc_arguments: list[str] = [],\n    java_version: None | str = None,\n    javac: None | str = None,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    manifest_file: None | str = None,\n    maven_coords: None | str = None,\n    never_mark_as_unused_dependency: None | bool = None,\n    non_exec_dep_plugins_deprecated: list[str | (str, list[str])] = [],\n    on_unused_dependencies: None | str = None,\n    plugins: list[str | (str, list[str])] = [],\n    proguard_config: None | str = None,\n    provided_deps: list[str] = [],\n    remove_classes: list[str] = [],\n    required_for_source_only_abi: bool = False,\n    resources: list[str] = [],\n    resources_root: None | str = None,\n    runtime_deps: list[str] = [],\n    source: None | str = None,\n    source_abi_verification_mode: None | str = None,\n    source_only_abi_deps: list[str] = [],\n    srcs: list[str] = [],\n    target: None | str = None,\n) -> None\n'})}),"\n",(0,i.jsxs)(s.p,{children:["A ",(0,i.jsx)(s.code,{children:"groovy_library()"})," rule is used to define a set of Groovy files that can be compiled together. It can also be used to cross compile a set of Groovy and Java files. The main output of a ",(0,i.jsx)(s.code,{children:"groovy_library()"})," rule is a single JAR file containing all of the compiled class files and resources."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"name"}),": name of the target"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"deps"}),": Rules (usually other ",(0,i.jsx)(s.code,{children:"groovy_library"})," or ",(0,i.jsx)(s.code,{children:"java_library()"})," rules) that are used to generate the classpath required to compile this ",(0,i.jsx)(s.code,{children:"groovy_library"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["This is the same as in ",(0,i.jsx)(s.code,{children:"java_library()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"exported_deps"}),": Other ",(0,i.jsx)(s.code,{children:"groovy_library"})," and ",(0,i.jsx)(s.code,{children:"java_library()"})," rules that depend on this rule will also include its ",(0,i.jsx)(s.code,{children:"exported_deps"})," in their classpaths."]}),"\n",(0,i.jsxs)(s.p,{children:["This is the same as in ",(0,i.jsx)(s.code,{children:"java_library()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"extra_arguments"}),": Only used during cross compilation."]}),"\n",(0,i.jsxs)(s.p,{children:["This is the same as in ",(0,i.jsx)(s.code,{children:"java_library()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"extra_groovyc_arguments"}),": List of additional arguments to pass into the Groovy compiler."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"java_version"}),": Only used during cross compilation."]}),"\n",(0,i.jsxs)(s.p,{children:["This is the same as in ",(0,i.jsx)(s.code,{children:"java_library()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"javac"}),": Specifies the Java compiler program to use for this rule. The value is a source path or an execution dep (e.g., //foo/bar",":bar",'). Overrides the value in "javac" in the "tools" section of ',(0,i.jsx)(s.code,{children:".buckconfig"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"non_exec_dep_plugins_deprecated"}),": Plugins that do not use the execution platform. This exists for historical reasons, and should not be used. Use ",(0,i.jsx)(s.code,{children:"plugins"})," instead - plugins should be configured for the execution platform since that is where they are used."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"plugins"}),": List of plugins that should be run during compilation of the target. A list of strings may additionally be provided in order to pass additional arguments to the plugin."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"provided_deps"}),": This is the same as in ",(0,i.jsx)(s.code,{children:"java_library()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"resources"}),": This is the same as in ",(0,i.jsx)(s.code,{children:"java_library()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"source"}),": Only used during cross compilation."]}),"\n",(0,i.jsxs)(s.p,{children:["This is the same as in ",(0,i.jsx)(s.code,{children:"java_library()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"srcs"}),": The set of files to compile for this rule. Usually these will all end in ",(0,i.jsx)(s.code,{children:".groovy"}),", but if any of the files end in ",(0,i.jsx)(s.code,{children:".java"}),", cross compilation using the jdk found in ",(0,i.jsx)(s.code,{children:"JAVA_HOME"})," will occur."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"target"}),": Only used during cross compilation."]}),"\n",(0,i.jsxs)(s.p,{children:["This is the same as in ",(0,i.jsx)(s.code,{children:"java_library()"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"details",children:"Details"}),"\n",(0,i.jsx)(s.p,{children:"Examples:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"\n# A rule that compiles a single .groovy file.\ngroovy_library(\n  name = 'example',\n  srcs = ['MySourceFile.groovy'],\n)\n\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"\n# A rule that compiles all of the .groovy files under the directory in\n# which the rule is defined using glob()\ngroovy_library(\n  name = 'groovy-only',\n  srcs = glob(['**/*.groovy']),\n)\n\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"\n# A rule that cross compiles all of the .groovy and .java files under\n# the directory in which the rule is defined, failing if compiling the\n# java files generates any compiler warnings\ngroovy_library(\n  name = 'cross-compilation',\n  srcs = glob(['**/*.groovy', '**/*.java']),\n  java_version = 8,\n  extra_arguments = [\n    '-Werror',\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var r=n(96540);const i={},t=r.createContext(i);function o(e){const s=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);