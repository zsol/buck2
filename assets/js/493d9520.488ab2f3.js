"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9743],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(96540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},48724:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"prelude/rules/core/command_alias","title":"command_alias","description":"command\\\\_alias","source":"@site/../docs/prelude/rules/core/command_alias.md","sourceDirName":"prelude/rules/core","slug":"/prelude/rules/core/command_alias","permalink":"/docs/prelude/rules/core/command_alias","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"alias","permalink":"/docs/prelude/rules/core/alias"},"next":{"title":"config_setting","permalink":"/docs/prelude/rules/core/config_setting"}}');var i=s(74848),r=s(28453);s(56289);const a={},l="command_alias",o={},c=[{value:"command_alias",id:"command_alias-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"command_alias",children:"command_alias"})}),"\n",(0,i.jsx)(n.h2,{id:"command_alias-1",children:"command_alias"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def command_alias(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _exec_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    _target_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    args: list[str] = [],\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    env: dict[str, str] = {},\n    exe: None | str = None,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    platform_exe: dict[str, str] = {},\n    resources: list[str] = [],\n    run_using_single_arg: bool = False,\n) -> None\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"command_alias"})," rule enables you to wrap build rules that create binaries and to pre-apply command-line arguments and environment variables."]}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"name"}),": name of the target"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"args"}),": A string of arguments that is passed to the executable specified by ",(0,i.jsx)(n.code,{children:"exe"})," at startup. These arguments support a subset of Buck's ",(0,i.jsx)(n.code,{children:"string parameter macros"})," . Only the ",(0,i.jsx)(n.code,{children:"$(location ...)"})," and ",(0,i.jsx)(n.code,{children:"$(exe ...)"})," macros are supported currently."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"env"}),": A map of environment variables that will be passed to the executable represented by ",(0,i.jsx)(n.code,{children:"exe"})," on startup. Environment variables support the same macros as arguments."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"exe"}),": A ",(0,i.jsx)(n.code,{children:"build target"})," for a rule that outputs an executable, such as an ",(0,i.jsx)(n.code,{children:"sh_binary()"}),", or an executable source file."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"platform_exe"}),": A mapping from platforms to ",(0,i.jsx)(n.code,{children:"build target"}),". enables you to override ",(0,i.jsx)(n.code,{children:"exe"})," per host platform."]}),"\n",(0,i.jsxs)(n.p,{children:["If present, ",(0,i.jsx)(n.code,{children:"exe"})," will be used as a fallback on host platforms that are not\nspecified in ",(0,i.jsx)(n.code,{children:"platform_exe"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["It is possible to omit ",(0,i.jsx)(n.code,{children:"exe"})," when providing ",(0,i.jsx)(n.code,{children:"platform_exe"}),".\nIn that case, the build will fail if the command is invoked on a platform not specified in\nthe mapping."]}),"\n",(0,i.jsxs)(n.p,{children:["Valid platforms are all values of the ",(0,i.jsxs)(n.a,{href:"https://dev.buck.build/javadoc/com/facebook/buck/util/environment/Platform.html",children:[(0,i.jsx)(n.code,{children:"Platform"})," enum"]})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"FREEBSD"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"LINUX"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"MACOS"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"WINDOWS"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"run_using_single_arg"}),": Ensure that the command alias can be run as a single argument (instead of $(exe) or RunInfo potentially expanding to multiple arguments)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"details",children:"Details"}),"\n",(0,i.jsx)(n.p,{children:"Example uses include running a command written in a scripting\nlanguage with a specific interpreter, and transparently wrapping\nsub-commands of a binary."}),"\n",(0,i.jsxs)(n.p,{children:["You can reference a ",(0,i.jsx)(n.code,{children:"command_alias"})," target in\nthe ",(0,i.jsx)(n.code,{children:"cmd"})," parameter of a ",(0,i.jsx)(n.code,{children:"genrule()"})," by\nusing the ",(0,i.jsx)(n.code,{children:"exe"})," macro:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n\n$(exe //path/to:target)\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Examples:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'\n# Combining an interpreter and a script\n\ncxx_binary(\n    name = "node-js",\n    srcs = [\n        # ...\n    ],\n    headers = [\n        # ...\n    ],\n)\n\nexport_file(\n    name = "scripts"\n)\n\ncommand_alias(\n    name = "server",\n    exe = ":node-js",\n    args = [\n        "$(location :scripts)/start-server.js",\n    ],\n)\n\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'\n# Exposing sub commands\n\nexport_file(\n    name = "yarn",\n    src = "yarn.sh",\n)\n\ncommand_alias(\n    name = "add",\n    exe = ":yarn",\n    args = ["add"],\n)\n\ncommand_alias(\n    name = "install",\n    exe = ":yarn",\n    args = ["install"],\n)\n\ncommand_alias(\n    name = "run",\n    exe = ":yarn",\n    args = ["run"],\n)\n\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'\n# Platform specific commands\n\nexport_file(\n    name = "node-windows",\n    src = "windows/node.exe",\n)\n\nexport_file(\n    name = "node-linux",\n    src = "linux/node",\n)\n\nexport_file(\n    name = "node-macos",\n    src = "macos/node",\n)\n\ncommand_alias(\n    name = "node",\n    platform_exe = {\n        "windows": ":node-windows",\n        "linux": ":node-linux",\n        "macos": ":node-macos",\n    },\n)\n\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);