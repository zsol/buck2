"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8044],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var i=s(96540);const t={},r=i.createContext(t);function c(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(r.Provider,{value:n},e.children)}},49784:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"users/commands/ctargets","title":"ctargets","description":"This document provides an overview of the commands and options available under buck2 ctargets.","source":"@site/../docs/users/commands/ctargets.generated.md","sourceDirName":"users/commands","slug":"/users/commands/ctargets","permalink":"/docs/users/commands/ctargets","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"ctargets","title":"ctargets"},"sidebar":"main","previous":{"title":"cquery","permalink":"/docs/users/commands/cquery"},"next":{"title":"docs","permalink":"/docs/users/commands/docs"}}');var t=s(74848),r=s(28453);const c={id:"ctargets",title:"ctargets"},l="ctargets",o={},d=[{value:"<code>buck2 ctargets</code>",id:"buck2-ctargets",level:2},{value:"Arguments:",id:"arguments",level:3},{value:"Options:",id:"options",level:3}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ctargets",children:"ctargets"})}),"\n",(0,t.jsxs)(n.p,{children:["This document provides an overview of the commands and options available under ",(0,t.jsx)(n.code,{children:"buck2 ctargets"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"buck2-ctargets",children:(0,t.jsx)(n.code,{children:"buck2 ctargets"})}),"\n",(0,t.jsx)(n.p,{children:"Resolve target patterns to configured targets"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage"}),": ",(0,t.jsx)(n.code,{children:"buck2 ctargets [OPTIONS] [TARGET_PATTERNS]..."})]}),"\n",(0,t.jsx)(n.h3,{id:"arguments",children:"Arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<TARGET_PATTERNS>"}),"\nPatterns to interpret"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"Options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--json"}),"\nPrint targets as JSON"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--skip-missing-targets"}),"\nSkip missing targets from ",(0,t.jsx)(n.code,{children:"BUCK"})," files when non-glob pattern is specified. This option does not skip missing packages and does not ignore errors of ",(0,t.jsx)(n.code,{children:"BUCK"})," file evaluation"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-A, --output-all-attributes"}),"\nOutput all attributes, equivalent of --output-attribute ''."]}),"\n",(0,t.jsx)(n.p,{children:"Avoid using this flag in automation because it may be expensive to produce certain attributes, and because it makes harder to track which special attributes are used."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-B, --output-basic-attributes"}),"\nOutput basic attributes, namely those the user can supply, plus rule type and package name"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-a, --output-attribute <ATTRIBUTE>"}),'\nRegular expressions to match attributes. Regular expressions are used in "search" mode, so for example empty string matches all attributes including special attributes.']}),"\n",(0,t.jsxs)(n.p,{children:["When using in automation, please specify the regular expression to match the attribute precisely, for example ",(0,t.jsx)(n.code,{children:"--output-attribute '^headers$'"})," to make it easier to track which special attributes are used."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--output-attributes <ATTRIBUTE>"}),"\nDeprecated: Use ",(0,t.jsx)(n.code,{children:"--output-attribute"})," instead."]}),"\n",(0,t.jsx)(n.p,{children:"List of space-separated attributes to output, --output-attributes attr1 attr2."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--target-platforms <PLATFORM>"}),"\nConfiguration target (one) to use to configure targets"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-m, --modifier <VALUE>"}),"\nA configuration modifier to configure all targets on the command line. This may be a constraint value target."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-c, --config <SECTION.OPTION=VALUE>"}),"\nList of config options"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--config-file <PATH>"}),"\nList of config file paths"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"--fake-host <HOST>"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Possible values:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"default"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"linux"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"macos"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"windows"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"--fake-arch <ARCH>"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Possible values:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"default"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"aarch64"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"x8664"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--fake-xcode-version <VERSION-BUILD>"}),"\nValue must be formatted as: version-build (e.g., 14.3.0-14C18 or 14.1-14B47b)"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--reuse-current-config"}),"\nRe-uses any ",(0,t.jsx)(n.code,{children:"--config"})," values (inline or via modefiles) if there's a previous command, otherwise the flag is ignored."]}),"\n",(0,t.jsxs)(n.p,{children:["If there is a previous command and ",(0,t.jsx)(n.code,{children:"--reuse-current-config"})," is set, then the old config is used, ignoring any overrides."]}),"\n",(0,t.jsx)(n.p,{children:"If there is no previous command but the flag was set, then the flag is ignored, the command behaves as if the flag was not set at all."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--exit-when-different-state"}),"\nUsed for exiting a concurrent command when a different state is detected"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--preemptible <PREEMPTIBLE>"}),"\nUsed to configure when this command could be preempted by another command for the same isolation dir."]}),"\n",(0,t.jsx)(n.p,{children:"Normally, when you run two commands - from different terminals, say - buck2 will attempt to run them in parallel. However, if the two commands are based on different state, that is they either have different configs or different filesystem states, buck2 cannot run them in parallel. The default behavior in this case is to block the second command until the first completes."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Possible values:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"never"}),": (default) When another command starts that cannot run in parallel with this one, block that command"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"always"}),": When another command starts, interrupt this command, ",(0,t.jsx)(n.em,{children:"even if they could run in parallel"}),". There is no good reason to use this other than that it provides slightly nicer superconsole output"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ondifferentstate"}),": When another command starts that cannot run in parallel with this one, interrupt this command"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--disable-starlark-types"}),"\nDisable runtime type checking in Starlark interpreter."]}),"\n",(0,t.jsx)(n.p,{children:"This option is not stable, and can be used only locally to diagnose evaluation performance problems."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--stack"}),"\nRecord or show target call stacks."]}),"\n",(0,t.jsx)(n.p,{children:"Starlark call stacks will be included in duplicate targets error."}),"\n",(0,t.jsxs)(n.p,{children:["If a command outputs targets (like ",(0,t.jsx)(n.code,{children:"targets"})," command), starlark call stacks will be printed after the targets."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--console <super|simple|...>"}),"\nWhich console to use for this command"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Default value: ",(0,t.jsx)(n.code,{children:"auto"})]}),"\n",(0,t.jsxs)(n.li,{children:["Possible values:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"auto"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"none"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"simple"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"simplenotty"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"simpletty"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"super"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--ui <UI>"}),"\nConfigure additional superconsole ui components."]}),"\n",(0,t.jsx)(n.p,{children:"Accepts a comma-separated list of superconsole components to add. Possible values are:"}),"\n",(0,t.jsx)(n.p,{children:"dice - shows information about evaluated dice nodes debugevents - shows information about the flow of events from buckd"}),"\n",(0,t.jsx)(n.p,{children:"These components can be turned on/off interactively. Press 'h' for help when superconsole is active."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Possible values:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"dice"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"debugevents"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"io"}),": I/O panel"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"re"}),": RE panel"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--no-interactive-console"}),"\nDisable console interactions"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--event-log <PATH>"}),"\nWrite events to this log file"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--write-build-id <PATH>"}),"\nWrite command invocation id into this file"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--unstable-write-invocation-record <PATH>"}),"\nWrite the invocation record (as JSON) to this path. No guarantees whatsoever are made regarding the stability of the format"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--command-report-path <PATH>"}),"\nWrite the command report to this path. A command report is always written to ",(0,t.jsx)(n.code,{children:"buck-out/v2/<uuid>/command_report"})," even without this flag"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);