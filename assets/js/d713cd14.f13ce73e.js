"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6042],{16472:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"prelude/rules/d/d_binary","title":"d_binary","description":"d\\\\_binary","source":"@site/../docs/prelude/rules/d/d_binary.md","sourceDirName":"prelude/rules/d","slug":"/prelude/rules/d/d_binary","permalink":"/docs/prelude/rules/d/d_binary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"d","permalink":"/docs/prelude/rules/d/"},"next":{"title":"d_library","permalink":"/docs/prelude/rules/d/d_library"}}');var s=n(74848),r=n(28453);n(56289);const a={},l="d_binary",d={},o=[{value:"d_binary",id:"d_binary-1",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"d_binary",children:"d_binary"})}),"\n",(0,s.jsx)(t.h2,{id:"d_binary-1",children:"d_binary"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'def d_binary(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    linker_flags: list[str] = [],\n    srcs: list[str] | dict[str, str] = [],\n) -> None\n'})}),"\n",(0,s.jsx)(t.p,{children:"A d_binary() rule builds a native executable from the supplied set of D source files and dependencies."}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"deps"}),": The set of dependencies of this rule. Each element should be a string specifying a d_library rule defined elsewhere (e.g. ",(0,s.jsx)(t.code,{children:"':foo'"})," or '//foo",":bar","')."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"linker_flags"}),": The list of flags to be passed to the linker. Each element should be a string specifying a linker flag (e.g. ",(0,s.jsx)(t.code,{children:"'--as-needed'"}),")."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"srcs"}),": The set of D source files to be compiled by this rule. Each element should be a string specifying a source file (e.g. ",(0,s.jsx)(t.code,{children:"'foo/bar.d'"}),")."]}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"details",children:"Details"}),"\n",(0,s.jsx)(t.p,{children:"Examples:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"\n# A rule that builds a D native executable from a single .d file\n# and a library dependency.\nd_binary(\n  name='greet',\n  srcs=[\n    'greet.d',\n  ],\n  deps=[\n    ':greeting',\n  ],\n)\n\nd_library(\n  name='greeting',\n  srcs=[\n    'greeting.d',\n  ],\n  deps=[\n    ':join',\n  ],\n)\n\nd_library(\n  name='join',\n  srcs=[\n    'join.d',\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var i=n(96540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);